<Application x:Class="Nova.Shell.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Domain="clr-namespace:Nova.Shell.Domain"
             StartupUri="MainWindow.xaml">

  <Application.Resources>
    <Color x:Key="BlueColor">#007ACC</Color>
    <Color x:Key="PurpleColor">#68217A</Color>
    <Color x:Key="RedColor">#E62020</Color>

    <SolidColorBrush x:Key="Gray">#FF1E1E1E</SolidColorBrush>
    <SolidColorBrush x:Key="Unfocused">#999999</SolidColorBrush>
    <SolidColorBrush x:Key="Blue" Color="{StaticResource BlueColor}" />
    <SolidColorBrush x:Key="Purple" Color="{StaticResource PurpleColor}" />
    <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedColor}" />
    <SolidColorBrush x:Key="DarkBlue">#004E7F</SolidColorBrush>
    <SolidColorBrush x:Key="White">#FDFDFD</SolidColorBrush>
    <SolidColorBrush x:Key="Background">#EFEFF2</SolidColorBrush>


    <Style x:Key="MyFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Control}">
            <Grid Margin="3 2">
              <Rectangle StrokeThickness="1" Stroke="{StaticResource Gray}" StrokeDashArray="2 2" />
              <Border Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" CornerRadius="0" BorderThickness="1" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <Style x:Key="_MetroButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Height" Value="26" />
      <Setter Property="Width" Value="30" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="{StaticResource Gray}" />
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border BorderThickness="0" Padding="6,2" Background="{TemplateBinding Background}">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,5" x:Name="_Content" />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Blue}" />
                <Setter Property="Background" Value="{StaticResource White}" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource White}" />
                <Setter Property="Background" Value="{StaticResource Blue}" />
                <Setter TargetName="_Content" Property="RenderTransform">
                  <Setter.Value>
                    <TranslateTransform Y="0.4" />
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <Style x:Key="_BaseNavigationalTreeItemStyle" TargetType="{x:Type Button}">
      <Setter Property="Height" Value="28" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
      <Setter Property="FontFamily" Value="{DynamicResource Font}" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style x:Key="_NavigationalTreeItemStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource _BaseNavigationalTreeItemStyle}">
      <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
      <Setter Property="Background" Value="Transparent" />
      
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="2 0 0 2" BorderThickness="0" Padding="0" Margin="0 0 0 2" Background="{TemplateBinding Background}">

              <TextBlock x:Name="_Content"
                         Text="{TemplateBinding Content}"
                         Foreground="{TemplateBinding Foreground}"
                         Padding="8 4"
                         Grid.Column="0" />
              
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Blue}" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource White}" />
                <Setter Property="Background" Value="{StaticResource Blue}" />
                <Setter TargetName="_Content" Property="RenderTransform">
                  <Setter.Value>
                    <TranslateTransform Y="0.4" />
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    
    <Style x:Key="_CurrentNavigationalTreeItemStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource _BaseNavigationalTreeItemStyle}">
      <Setter Property="Foreground" Value="{StaticResource White}" />
      <Setter Property="Background" Value="{StaticResource Blue}" />
      
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="2 0 0 2" BorderThickness="0" Padding="0" Margin="0 0 0 2" Background="{TemplateBinding Background}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="_Content"
                           Text="{TemplateBinding Content}"
                           Foreground="{TemplateBinding Foreground}"
                           Padding="8 4"
                           Grid.Column="0" />

                <Path Grid.Column="1"
                      Margin="0 0 -1 0"
                         
                      VerticalAlignment="Center"
                      HorizontalAlignment="Right"
                      
                      StrokeThickness="0"
                      Stroke="{x:Null}"
                      Fill="{StaticResource White}"

                      Data="F1 M 20,0 L 6,10 L 20,20 Z"
                         
                      />
                <Path Grid.Column="1"
                      Margin="0 0 -1 0"
                         
                      VerticalAlignment="Center"
                      HorizontalAlignment="Right"
                      
                      StrokeThickness="1"
                      Stroke="{DynamicResource LightBlueBrush}"
                      Fill="{x:Null}"

                      Data="M 20,0 L 6,10 L 20,20"
                         
                      />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="_Content" Property="RenderTransform">
                  <Setter.Value>
                    <TranslateTransform Y="0.4" />
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>


    <DataTemplate DataType="{x:Type Domain:NovaTreeNode}">

      <Button x:Name="_TreeNodeButton" 
              Style="{StaticResource _NavigationalTreeItemStyle}"
              Command="{Binding NavigationalCommand, Mode=OneWay}"
              Content="{Binding Title, Mode=OneWay}"
                  />

      <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding IsCurrentNode, Mode=OneWay}" Value="True">
          <Setter TargetName="_TreeNodeButton" Property="Style" Value="{StaticResource _CurrentNavigationalTreeItemStyle}" />
        </DataTrigger>
      </DataTemplate.Triggers>
    </DataTemplate>

  </Application.Resources>
</Application>
