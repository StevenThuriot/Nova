<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Nova.Controls"
    xmlns:Validation="clr-namespace:Nova.Validation"
    xmlns:Nova="clr-namespace:Nova.Library"
    >


    <Style TargetType="{x:Type controls:ValidationBorder}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ValidationBorder}">
                  <Grid>
                    <Border CornerRadius="{DynamicResource ControlRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{DynamicResource ValidationBorderThickness}"
                            Background="{TemplateBinding BorderBrush}"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            
                            x:Name="ValidationBorder"
                          >

                      <ContentPresenter />

                    </Border>

                    <Path x:Name="ErrorTriangle"
                          Data="{DynamicResource ErrorIcon}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:ValidationBorder}}, Path=(Validation:NovaValidation.Severity)}"
                          Visibility="Collapsed"
                          ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:ValidationBorder}}, Path=(Validation:NovaValidation.ValidationTooltip)}" />
                  </Grid>

                  <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsValid)}"
                                 Value="False">
                      <Setter TargetName="ValidationBorder" Property="BorderBrush" 
                              Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:ValidationBorder}}, Path=(Validation:NovaValidation.Severity)}" />
                      
                      <Setter TargetName="ErrorTriangle" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.ValidationTooltip)}" Value="{x:Null}">
                      <Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.ValidationTooltip).Length}" Value="0">
                      <Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <!-- Only show black border if the validation hasn't triggered yet. -->
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsValid)}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsRequired)}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFilledIn}" Value="False" />
                      </MultiDataTrigger.Conditions>
                      <MultiDataTrigger.Setters>
                        <Setter TargetName="ValidationBorder" Property="BorderBrush" Value="{DynamicResource Required}" />
                      </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Nova:ViewMode.IsReadOnly)}" Value="True">
                      <Setter Property="BorderBrush" Value="Transparent" />
                      <Setter TargetName="ValidationBorder" Property="BorderBrush" Value="Transparent" />
                      <Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    
                    <Trigger Property="IsEnabled" Value="False">
                      <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                      <Setter Property="Foreground" Value="{DynamicResource DisabledBrush}" />
                      <Setter Property="BorderBrush" Value="{DynamicResource DisabledBrush}" />
                      <Setter TargetName="ValidationBorder" Property="BorderBrush" Value="{DynamicResource DisabledBrush}" />
                      <Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    
                  </ControlTemplate.Triggers>
                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
