<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Nova="http://nova.thuriot.be/Base"
                    xmlns:Validation="http://nova.thuriot.be/Validation">


	<Style x:Key="StrippedDownTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

  <Style x:Key="TextBoxBase" TargetType="{x:Type TextBox}">
    <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="BorderBrush" Value="{DynamicResource UnfocusedControlBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
  </Style>

  <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid>
						<Border CornerRadius="{DynamicResource ControlRadius}" BorderBrush="{TemplateBinding BorderBrush}"
						        Background="{TemplateBinding BorderBrush}" BorderThickness="{DynamicResource ValidationBorderThickness}"
						        x:Name="ValidationBorder">
							<Border CornerRadius="{DynamicResource ControlRadius}" BorderBrush="{TemplateBinding BorderBrush}"
							        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
								<ScrollViewer x:Name="PART_ContentHost" />
							</Border>
						</Border>
						<Path x:Name="ErrorTriangle" Data="{DynamicResource ErrorIcon}"
						      Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=(Validation:NovaValidation.Severity)}"
						      Visibility="Collapsed"
						      ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=(Validation:NovaValidation.ValidationTooltip)}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource FocusedInputBorderBrush}" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsValid)}"
						             Value="False">
							<Setter TargetName="ValidationBorder" Property="BorderBrush"
							        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=(Validation:NovaValidation.Severity)}" />
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger
Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.ValidationTooltip)}"
Value="{x:Null}">
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger
Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.ValidationTooltip).Length}"
Value="0">
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <!-- Only show black border if the validation hasn't triggered yet. -->
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsValid)}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsRequired)}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text.Length}" Value="0" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="ValidationBorder" Property="BorderBrush" Value="{DynamicResource Required}" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Nova:ViewMode.IsReadOnly)}"
						             Value="True">
              <Setter Property="IsReadOnly" Value="True" />
              <Setter Property="BorderBrush" Value="Transparent" />
              <Setter TargetName="ValidationBorder" Property="BorderBrush" Value="Transparent" />
              <Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
              <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
            </DataTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource DisabledBrush}" />
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBrush}" />
							<Setter TargetName="ValidationBorder" Property="BorderBrush" Value="{DynamicResource DisabledBrush}" />
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="WatermarkTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid>
						<Border CornerRadius="{DynamicResource ControlRadius}" BorderBrush="{TemplateBinding BorderBrush}"
						        Background="{TemplateBinding BorderBrush}" BorderThickness="{DynamicResource ValidationBorderThickness}"
						        x:Name="ValidationBorder">
							<Border CornerRadius="{DynamicResource ControlRadius}" BorderBrush="{TemplateBinding BorderBrush}"
							        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
								<ScrollViewer x:Name="PART_ContentHost" />
							</Border>
						</Border>
						<TextBlock Style="{DynamicResource WatermarkStyle}" />

						<Path x:Name="ErrorTriangle" Data="{DynamicResource ErrorIcon}"
						      Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=(Validation:NovaValidation.Severity)}"
						      Visibility="Collapsed"
						      ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=(Validation:NovaValidation.ValidationTooltip)}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource FocusedInputBorderBrush}" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsValid)}"
						             Value="False">
							<Setter TargetName="ValidationBorder" Property="BorderBrush"
							        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=(Validation:NovaValidation.Severity)}" />
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger
Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.ValidationTooltip)}"
Value="{x:Null}">
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger
Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.ValidationTooltip).Length}"
Value="0">
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <!-- Only show black border if the validation hasn't triggered yet. -->
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsValid)}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation:NovaValidation.IsRequired)}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text.Length}" Value="0" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="ValidationBorder" Property="BorderBrush" Value="{DynamicResource Required}" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Nova:ViewMode.IsReadOnly)}"
						             Value="True">
							<Setter Property="IsReadOnly" Value="True" />
							<Setter Property="BorderBrush" Value="Transparent" />
							<Setter TargetName="ValidationBorder" Property="BorderBrush" Value="Transparent" />
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
							<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
						</DataTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBrush}" />
							<Setter TargetName="ValidationBorder" Property="BorderBrush" Value="{DynamicResource DisabledBrush}" />
							<Setter TargetName="ErrorTriangle" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>